/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BlogView as PrismaBlogView } from "@prisma/client";

export class BlogViewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BlogViewCountArgs, "select">): Promise<number> {
    return this.prisma.blogView.count(args);
  }

  async blogViews(
    args: Prisma.BlogViewFindManyArgs
  ): Promise<PrismaBlogView[]> {
    return this.prisma.blogView.findMany(args);
  }
  async blogView(
    args: Prisma.BlogViewFindUniqueArgs
  ): Promise<PrismaBlogView | null> {
    return this.prisma.blogView.findUnique(args);
  }
  async createBlogView(
    args: Prisma.BlogViewCreateArgs
  ): Promise<PrismaBlogView> {
    return this.prisma.blogView.create(args);
  }
  async updateBlogView(
    args: Prisma.BlogViewUpdateArgs
  ): Promise<PrismaBlogView> {
    return this.prisma.blogView.update(args);
  }
  async deleteBlogView(
    args: Prisma.BlogViewDeleteArgs
  ): Promise<PrismaBlogView> {
    return this.prisma.blogView.delete(args);
  }
}
